// в чем разница между  SQL и NoSQL?

// Что такое транзакции?
// Рассказать про типы связей таблиц в SQL?
// Рассказать про нормализацию  в SQL?

// Какие виды NoSQL бывают и для чего они используются?

// Что такое QraphQL и для чего он?
// Что такое Redis и для чего он?

// Все задачи делаются без использовоания библиотек и тд...
// Задача
// 1) Для SQL бд сделать 3 таблицы (юзеров и постов и картинок). Связь между юзером и постом (1:M), между постом и картинками (N:M).
/*
  таблица юзеров
  id - number
  name - string;
  posts - post[];

  таблица постов
  id - number;
  theme - string;
  text - string;
  authorId - string;

  необходимо написать sql скрипт, который реализует пагинацю для выдачи постов пачками по 5 штук (результат должен включать таблицы которые связаны  с юзером)

  Задачка про кинотеатр
    Есть кинотеатр, в нем идут фильмы. У фильма есть название, длительность (пусть для простоты будет 60, 90 или 120 минут), 
    цена билета (в разное время и дни может быть разная), время начала сеанса (один фильм может быть показан несколько раз в разное время за разную цену). 
    Также, есть информация о купленных билетах (номер билета, на какой сеанс).

    Задания:

    составь грамотную нормализованную схему хранения этих данных в БД. Внеси в нее 4-5 фильмов, расписание на один день и несколько проданных билетов.
    Сделай запросы, считающие и выводящие в понятном виде:

    ошибки в расписании (фильмы накладываются друг на друга),
    отсортированные по возрастанию времени. Выводить надо колонки «фильм 1», «время начала», «длительность», «фильм 2», «время начала», «длительность».
    перерывы больше или равные 30 минут между фильмами, выводятся по уменьшению длительности перерыва. Выводить надо колонки «фильм 1», «время начала», «длительность», 
      «время начала второго фильма», «длительность перерыва».
    список фильмов, для каждого указано общее число посетителей за все время, среднее число зрителей за сеанс и общая сумма сбора по каждому, отсортированные по убыванию прибыли.
      Внизу таблицы должна быть строчка «итого», содержащая данные по всем фильмам сразу.
    число посетителей и кассовые сборы, сгруппированные по времени начала фильма: с 9 до 15, с 15 до 18, с 18 до 21, с 21 до 00:00.
      (то есть сколько посетителей пришло с 9 до 15 часов, сколько с 15 до 18 и т.д.).
*/

// 3) Для MongoDB сделать задачи выше.
